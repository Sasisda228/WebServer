/* ======================================== */
/* Premium NavBar Styles (Optimized)      */
/* ======================================== */

/* --- Variables --- */
.navContainer   { /* Define variables on :root or a specific container if themes change */
  --primary-color: #141220;
  --secondary-color: #1d1a2d;
  --accent-color-1: #9a1840;
  --accent-color-2: #371b72;
  --text-color: #ffffff;
  --text-secondary: rgba(255, 255, 255, 0.7);
  --hover-color: rgba(255, 255, 255, 0.1);
  --active-color: #9a1840; /* Consider if this should be accent-color-1 */
  --shadow-color: rgba(0, 0, 0, 0.3);
  --glow-color: rgba(154, 24, 64, 0.5);
  --glow-color-2: rgba(55, 27, 114, 0.5);
  --transition-speed: 0.3s;
  --border-radius: 12px;
}

/* --- Main Container --- */
.navContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(20, 18, 32, 0.85); /* Slightly transparent primary for backdrop */
  color: var(--text-color);
  padding: 0 2rem;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  height: 80px;
  box-shadow: 0 4px 20px var(--shadow-color);
  border-bottom: 1px solid rgba(154, 24, 64, 0.15);

  /* Performance consideration: backdrop-filter can be expensive, especially on mobile. Test performance. */
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

/* --- Content Wrapper --- */
.navContent {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 1400px;
  height: 100%;
}

/* --- Navigation Sides --- */
.navSide {
  flex: 1;
  display: flex;
  align-items: center;
}

.navSide:first-child { /* Left side items */
  justify-content: flex-start; /* Align items to the start */
  /* Removed padding-right, spacing handled by items/logo */
}

.navSide:last-child { /* Right side items */
  justify-content: flex-end; /* Align items to the end */
  /* Removed padding-left */
}

/* --- Logo --- */
.logoContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  position: relative; /* Needed for z-index stacking */
  z-index: 2; /* Ensure logo is clickable above potential side elements */
  padding: 0 2rem; /* Add padding to space it from nav items */
}

.glitchLogoContainer { /* Renamed for clarity - this is the pulsing container */
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 70px;
  height: 70px;
  border-radius: 50%;
  background: linear-gradient(
    135deg,
    var(--accent-color-2),
    var(--accent-color-1)
  );
  box-shadow: 0 0 15px var(--glow-color);
  overflow: hidden; /* Keep overflow hidden */
  transition: transform var(--transition-speed) ease; /* Add transition for hover scale */

  /* Performance consideration: Animating box-shadow in 'pulse' can be expensive. */
  /* If performance issues arise, consider animating opacity or transform on a pseudo-element. */
  animation: pulse 3s infinite ease-in-out;
}

.glitchLogoContainer::before { /* Radial gradient inside logo */
  content: "";
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at center,
    transparent 50%,
    rgba(154, 24, 64, 0.15) 100%
  );
  z-index: 1; /* Below the image/text */
}

.glitchLogoContainer:hover {
  transform: scale(1.05); /* Scale the container on hover */
}

/* --- Logo Text (Glitch Effect) --- */
/* Consolidated glitch styles - applied to the text span inside the logo container */
.glitchText {
  position: relative; /* Needed for pseudo-elements */
  z-index: 2; /* Ensure text is above ::before gradient */
  color: #fff;
  font-size: 2.4rem; /* Adjust as needed */
  font-weight: bold;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  line-height: 1;
  display: inline-block;
  /* Glitch base color shadows */
  text-shadow: 2px 0 #00fff9, -2px 0 #ff005a;
  animation: glitch-skew 1.2s infinite linear alternate-reverse;
}

.glitchText::before,
.glitchText::after {
  content: attr(data-text); /* Use data-text attribute from the span */
  position: absolute;
  left: 0;
  top: 0; /* Ensure alignment */
  width: 100%;
  height: 100%; /* Ensure full coverage */
  overflow: hidden;
  color: #fff;
  background: transparent; /* Background should be transparent */
  clip: rect(0, 900px, 0, 0);
}

.glitchText::before {
  text-shadow: 2px 0 #00fff9; /* Match base shadow */
  animation: glitch-top 1.2s infinite linear alternate-reverse;
}

.glitchText::after {
  text-shadow: -2px 0 #ff005a; /* Match base shadow */
  animation: glitch-bottom 1.2s infinite linear alternate-reverse;
}


/* --- Navigation Items --- */
.navItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0.75rem 1.5rem; /* Adjust padding as needed */
  margin: 0 0.5rem; /* Add margin for spacing between items */
  cursor: pointer;
  position: relative;
  border-radius: var(--border-radius);
  background-color: transparent;
  transition: background-color var(--transition-speed), color var(--transition-speed);
  user-select: none;
}

.navItem:hover {
  background-color: var(--hover-color);
}

.navIcon {
  font-size: 1.5rem;
  margin-bottom: 0.25rem;
  color: var(--text-secondary);
  transition: color var(--transition-speed), transform var(--transition-speed);
}

.navLabel {
  font-size: 0.85rem;
  font-weight: 500;
  letter-spacing: 0.5px;
  color: var(--text-secondary);
  transition: color var(--transition-speed);
  white-space: nowrap; /* Prevent label wrapping */
}

/* Hover and Active States for Icon/Label */
.navItem:hover .navIcon,
.navItem:hover .navLabel {
  color: var(--text-color);
}

.navItem.active .navLabel {
   color: var(--text-color); /* Active label text color */
   font-weight: 600; /* Slightly bolder when active */
}

.navItem.active .navIcon {
  color: var(--accent-color-1); /* Active icon color */
}

/* Active Indicator Dot */
.activeIndicator {
  position: absolute;
  bottom: 5px; /* Adjusted position */
  left: 50%;
  transform: translateX(-50%) scale(0); /* Start hidden and scaled down */
  width: 6px; /* Slightly larger */
  height: 6px;
  background-color: var(--accent-color-1);
  border-radius: 50%;
  box-shadow: 0 0 10px var(--glow-color); /* Use glow color */
  transition: transform var(--transition-speed) ease;
  opacity: 0; /* Start hidden */
}

.navItem.active .activeIndicator {
  transform: translateX(-50%) scale(1); /* Scale up when active */
  opacity: 1; /* Fade in */
}

/* --- Category Dropdown --- */
/* Wrapper might not be needed if motion.div was removed */
/* Verify if .navItemWrapper is still used in the TSX component */
/*
.navItemWrapper {
  position: relative;
}
*/

.categoryDropdownContainer { /* Wrapper for positioning */
   position: relative;
}

.categoryDropdown {
  position: absolute;
  top: calc(100% + 15px); /* Increased distance */
  left: 50%;
  transform: translateX(-50%);
  background: var(--secondary-color); /* Use secondary color for contrast */
  border-radius: 8px;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5), 0 0 0 1px rgba(154, 24, 64, 0.3); /* Enhanced shadow */
  padding: 0.75rem; /* Increased padding */
  min-width: 180px; /* Slightly wider */
  z-index: 110; /* Ensure dropdown is above nav container */
  border: 1px solid rgba(154, 24, 64, 0.2); /* Softer border */
  overflow: hidden; /* Keep overflow hidden */
  opacity: 0; /* Start hidden */
  visibility: hidden; /* Start hidden */
  transform: translateX(-50%) translateY(10px); /* Start slightly lower */
  transition: opacity var(--transition-speed) ease,
              visibility var(--transition-speed) ease,
              transform var(--transition-speed) ease;
}

/* Show dropdown when a parent/sibling indicates hover/focus */
/* This logic needs to be handled by the React component (useState) */
/* Example class added by React when dropdown should be open: */
.categoryDropdown.open {
  opacity: 1;
  visibility: visible;
  transform: translateX(-50%) translateY(0);
}


.categoryDropdown::before { /* Top gradient border */
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px; /* Thicker gradient */
  background: linear-gradient(
    90deg,
    var(--accent-color-1),
    var(--accent-color-2)
  );
}

.categoryList {
  list-style: none;
  padding: 0;
  margin: 0;
}

.categoryItem {
  margin: 0.25rem 0; /* Adjusted margin */
}

.categoryButton {
  width: 100%;
  text-align: left;
  padding: 0.7rem 1rem; /* Adjusted padding */
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  border-radius: 6px;
  transition: background-color var(--transition-speed), color var(--transition-speed), padding-left var(--transition-speed);
  font-weight: 500;
  font-size: 0.9rem; /* Slightly larger font */
  display: flex;
  align-items: center;
  position: relative; /* For pseudo-element */
  overflow: hidden; /* For hover effect */
}

.categoryButton::before { /* Hover indicator */
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 4px; /* Indicator width */
  background: linear-gradient(
    180deg,
    var(--accent-color-1),
    var(--accent-color-2)
  );
  border-radius: 0 4px 4px 0; /* Rounded edge */
  opacity: 0;
  transform: translateX(-100%); /* Start off-screen */
  transition: transform 0.2s ease, opacity 0.2s ease;
}

.categoryButton:hover {
  background-color: var(--hover-color);
  color: var(--text-color);
  padding-left: 1.5rem; /* Indent text on hover */
}

.categoryButton:hover::before {
  opacity: 1;
  transform: translateX(0); /* Slide in indicator */
}

/* --- Animations --- */
@keyframes pulse {
  0% {
    box-shadow: 0 0 10px var(--glow-color);
  }
  50% {
    box-shadow: 0 0 20px var(--glow-color-2), 0 0 25px var(--glow-color); /* Increased glow */
  }
  100% {
    box-shadow: 0 0 10px var(--glow-color);
  }
}

/* Glitch Text Animations */
@keyframes glitch-skew {
  0% { transform: skew(0deg); }
  20% { transform: skew(-2deg); }
  40% { transform: skew(2deg); }
  60% { transform: skew(-1deg); }
  80% { transform: skew(1deg); }
  100% { transform: skew(0deg); }
}

@keyframes glitch-top {
  0% { clip: rect(0, 900px, 0, 0); transform: translate(-2px, -2px); }
  10% { clip: rect(0, 900px, 10px, 0); transform: translate(-2px, 2px); }
  20% { clip: rect(10px, 900px, 20px, 0); transform: translate(2px, -2px); } /* Adjusted clip */
  30% { clip: rect(20px, 900px, 30px, 0); transform: translate(2px, 2px); } /* Adjusted clip */
  40% { clip: rect(30px, 900px, 40px, 0); transform: translate(-2px, -2px); } /* Added steps */
  50% { clip: rect(40px, 900px, 50px, 0); transform: translate(-2px, 2px); }
  60% { clip: rect(50px, 900px, 60px, 0); transform: translate(2px, -2px); }
  70% { clip: rect(60px, 900px, 70px, 0); transform: translate(2px, 2px); }
  80% { clip: rect(70px, 900px, 80px, 0); transform: translate(-2px, -2px); }
  90% { clip: rect(80px, 900px, 90px, 0); transform: translate(-2px, 2px); }
  100% { clip: rect(90px, 900px, 100px, 0); transform: translate(0, 0); } /* Adjusted clip */
}

@keyframes glitch-bottom {
   0% { clip: rect(0, 900px, 0, 0); transform: translate(2px, 2px); }
  10% { clip: rect(90px, 900px, 100px, 0); transform: translate(2px, -2px); } /* Adjusted clip */
  20% { clip: rect(80px, 900px, 90px, 0); transform: translate(-2px, 2px); } /* Adjusted clip */
  30% { clip: rect(70px, 900px, 80px, 0); transform: translate(-2px, -2px); } /* Adjusted clip */
  40% { clip: rect(60px, 900px, 70px, 0); transform: translate(2px, 2px); } /* Added steps */
  50% { clip: rect(50px, 900px, 60px, 0); transform: translate(2px, -2px); }
  60% { clip: rect(40px, 900px, 50px, 0); transform: translate(-2px, 2px); }
  70% { clip: rect(30px, 900px, 40px, 0); transform: translate(-2px, -2px); }
  80% { clip: rect(20px, 900px, 30px, 0); transform: translate(2px, 2px); }
  90% { clip: rect(10px, 900px, 20px, 0); transform: translate(2px, -2px); }
  100% { clip: rect(0, 900px, 10px, 0); transform: translate(0, 0); } /* Adjusted clip */
}


/* --- Media Queries --- */
@media (max-width: 1024px) { /* Adjusted breakpoint */
  .navItem {
    padding: 0.75rem 1rem; /* Slightly less padding */
    margin: 0 0.25rem; /* Less margin */
  }
  .navLabel {
    font-size: 0.8rem;
  }
  .logoContainer {
     padding: 0 1rem; /* Less padding around logo */
  }
}

@media (max-width: 768px) {
  /* Mobile: Bottom Navigation */
  .navContainer {
    top: auto; /* Remove from top */
    bottom: 0; /* Stick to bottom */
    height: 70px;
    padding: 0 1rem;
    border-top: 1px solid rgba(154, 24, 64, 0.15); /* Border on top */
    border-bottom: none; /* No bottom border */
    box-shadow: 0 -4px 20px var(--shadow-color); /* Shadow on top */
  }

  .navContent {
    max-width: 100%; /* Full width on mobile */
  }

  .navSide {
     flex-grow: 1; /* Allow sides to grow */
     flex-basis: 0; /* Start from 0 basis */
  }
   .navSide:first-child {
     justify-content: flex-start; /* Align left side to start */
   }
   .navSide:last-child {
     justify-content: flex-end; /* Align right side to end */
   }


  .logoContainer {
    position: absolute; /* Position logo absolutely */
    left: 50%;
    bottom: 15px; /* Position above the nav bar */
    transform: translateX(-50%);
    z-index: 101; /* Above nav items */
    padding: 0; /* Remove padding */
  }

  .glitchLogoContainer {
    width: 65px; /* Slightly smaller logo */
    height: 65px;
  }

  .navItem {
    padding: 0.5rem; /* Smaller padding */
    margin: 0 0.1rem; /* Tighter spacing */
    flex-grow: 1; /* Allow items to fill space */
    justify-content: center; /* Center content vertically */
  }

  .navIcon {
    font-size: 1.4rem; /* Adjust icon size */
    margin-bottom: 0.15rem;
  }

  .navLabel {
    font-size: 0.7rem; /* Smaller label */
  }

  .activeIndicator {
     bottom: 3px; /* Adjust indicator position */
     width: 5px;
     height: 5px;
  }

  /* Category Dropdown on Mobile */
  .categoryDropdownContainer {
     position: static; /* Remove relative positioning */
  }

  .categoryDropdown {
    bottom: calc(100% + 10px); /* Position above the nav bar */
    top: auto; /* Remove top positioning */
    left: 1rem; /* Align to left */
    right: 1rem; /* Align to right */
    transform: none; /* Reset transform */
    width: auto; /* Auto width */
    min-width: 0; /* Reset min-width */
    max-width: calc(100vw - 2rem); /* Limit width */
    /* Adjust transform for animation if needed */
     transform: translateY(10px);
  }
   .categoryDropdown.open {
      transform: translateY(0);
   }

  .categoryButton {
    padding: 0.6rem 0.8rem;
    font-size: 0.85rem;
  }
}

/* Reduced Motion Preferences */
@media (prefers-reduced-motion: reduce) {
  .navContainer *,
  .glitchLogoContainer,
  .navItem,
  .categoryDropdown,
  .glitchText,
  .glitchText::before,
  .glitchText::after {
    transition-duration: 0.01s !important; /* Minimal transition */
    animation: none !important; /* Disable animations */
  }

  /* Keep essential transitions like opacity for visibility */
   .activeIndicator,
   .categoryDropdown {
      transition: opacity 0.01s !important;
   }
}

