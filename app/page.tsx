import Counter from "@/components/Counter";
import LegalInfo from "@/components/LegalInfo";
import ProductCarousel from "@/components/ProductCarousel";
import ReviewsSection from "@/components/ReviewsSection";
import SloganSection from "@/components/SloganSection";
import dynamic from "next/dynamic";
// --- Data Fetching Functions (Server-Side) ---
// Replace with your actual API calls or data sources

// Example Product type (adjust as needed)

// Example Review type (adjust as needed)
interface Review {
  id: string | number;
  author: string;
  text: string;
}

async function getFeaturedProducts(): Promise<Product[]> {
  // TODO: Replace with your actual API endpoint or data fetching logic
  // Example fetching logic:
  const res = await fetch(`${process.env.API_URL}/api/products`, {
    cache: "no-store",
  }); // Or configure caching
  if (!res.ok) {
    throw new Error("Failed to fetch products");
  }
  const data = await res.json();
  return data;

  // --- End Placeholder Data ---
}

async function getRecentReviews(): Promise<Review[]> {
  // TODO: Replace with your actual API endpoint or data fetching logic
  // Example:
  // const res = await fetch(`${process.env.NEXT_PUBLIC_API_BASE_URL}/api/reviews/recent`, { cache: 'no-store' });
  // if (!res.ok) {
  //   throw new Error('Failed to fetch reviews');
  // }
  // const data = await res.json();
  // return data;

  // --- Placeholder Data ---
  console.log("Fetching recent reviews (server-side)...");
  await new Promise((resolve) => setTimeout(resolve, 50)); // Simulate network delay
  return [
    {
      id: "r1",
      author: "–ê–Ω–æ–Ω–∏–º",
      text: "–°—É–ø–µ—Ä –∏–≥—Ä—É—à–∫–∞ –¥–ª—è –º–∞–ª—å—á–∏—à–µ–∫! –ú–æ–π —Å—Ä–∞–∑—É –Ω–∞—á–∞–ª –≤–æ–µ–Ω–Ω—ã–µ —Ç–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å üòÇ –î–µ—Ä–∂–∏—Ç —É–¥–∞—Ä, –Ω–µ –ª–æ–º–∞–µ—Ç—Å—è.",
    },
    {
      id: "r2",
      author: "–ê–Ω–¥—Ä–µ–π",
      text: "–ó–∞–∫–∞–∑—ã–≤–∞–ª–∏ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø–ª–µ–º—è–Ω–Ω–∏–∫—É, –≤—Å–µ –≥–æ—Å—Ç–∏ –±—ã–ª–∏ –≤ —à–æ–∫–µ –æ—Ç —ç—Ç–∏—Ö –æ—Ä–±–∏–∑–Ω—ã—Ö –ø—É—à–µ–∫! –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–ª–∞—Å—Ç–∏–∫!! –°–æ–≤–µ—Ç—É—é!",
    },
    {
      id: "r3",
      author: "–ê–Ω–æ–Ω–∏–º",
      text: "–ó–∞–∫–∞–∑–∞–ª –ø—É—à–∫—É –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥ ‚Äì —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —á–∞—Å—ã! –®–∞—Ä–∏–∫–∏ –ª–µ—Ç—è—Ç –ø–æ –æ—â—É—â–µ–Ω–∏—è–º –º–µ—Ç—Ä–æ–≤ –Ω–∞ 5-10, —Ç–æ—á–Ω–æ—Å—Ç—å –æ—Ç–ª–∏—á–Ω–∞—è. –ö–æ—Ä–ø—É—Å —Ä–µ–∞–ª—å–Ω–æ –ø–æ—Ö–æ–∂ –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π, –Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π. –°—É–ø–µ—Ä-–≤–µ—Å–µ–ª–æ –∏–≥—Ä–∞—Ç—å –Ω–∞ —É–ª–∏—Ü–µ!",
    },
  ];
  // --- End Placeholder Data ---
}

// --- Dynamic Imports (Client Components) ---

// TeamAdvantages - Keep dynamic if it's heavy and uses client-side features extensively
const TeamAdvantages = dynamic(() => import("@/components/TeamAdvantages"), {
  ssr: true, // Keep SSR false if it relies heavily on client-side APIs/hooks like framer-motion
  loading: () => (
    <div
      style={{
        height: "300px",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        color: "var(--text-secondary)",
      }}
    >
      –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤...
    </div>
  ), // Simple loading state
});

// --- Homepage Component (Server Component) ---

export default async function Home() {
  // Fetch data in parallel on the server
  const [products, reviews] = await Promise.all([
    getFeaturedProducts(),
    getRecentReviews(),
  ]);

  return (
    // Use a main tag for semantic structure
    <main>
      {/* Hero Section or other introductory content could go here */}
      <SloganSection />
      <section
        className="stats-section-wrapper"
        style={{
          padding: ".5rem 1rem",
          backgroundColor: "var(--primary-color)",
        }}
      >
        <h1 className="font-bold text-2xl text-white mb-2 flex justify-center">
          –í–æ–æ—Ä—É–∂–µ–Ω–æ –±–æ–π—Ü–æ–≤
        </h1>

        <div className="flex justify-center">
          <Counter />
        </div>
      </section>
      {/* Product Carousel - Pass fetched data */}
      {/* ProductCarousel is a Client Component but receives data from the Server Component */}
      <ProductCarousel products={products} title="" />

      {/* Team Advantages Section - Dynamically loaded Client Component */}
      <TeamAdvantages />

      {/* Reviews Section - Pass fetched data */}
      {/* ReviewsSection is a Client Component using framer-motion */}
      <ReviewsSection reviews={reviews} title="–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤" />

      {/* Legal Info Footer - Server Component */}
      <LegalInfo />
    </main>
  );
}
